From 3c3b7e9f6c212f33a6ca1932abfade227eb497fd Mon Sep 17 00:00:00 2001
From: Brandon Li <brandonli@apache.org>
Date: Thu, 20 Feb 2014 22:27:13 +0000
Subject: [PATCH 1569/1612] HDFS-5944. LeaseManager:findLeaseWithPrefixPath can't handle path like /a/b/ and cause SecondaryNameNode failed do checkpoint. Contributed by Yunjiong Zhao

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570366 13f79535-47bb-0310-9956-ffa450edef68
---
 .../hadoop/hdfs/server/namenode/LeaseManager.java  |    7 ++-
 .../hdfs/server/namenode/TestLeaseManager.java     |   57 ++++++++++++++++++++
 2 files changed, 63 insertions(+), 1 deletions(-)
 create mode 100644 hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestLeaseManager.java

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java
index dabd85e..82e2f03 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java
@@ -368,7 +368,12 @@ public class LeaseManager {
     }
 
     List<Map.Entry<String, Lease>> entries = new ArrayList<Map.Entry<String, Lease>>();
-    final int srclen = prefix.length();
+    int srclen = prefix.length();
+
+    // prefix may ended with '/'
+    if (prefix.charAt(srclen - 1) == Path.SEPARATOR_CHAR) {
+      srclen -= 1;
+    }
 
     for(Map.Entry<String, Lease> entry : path2lease.tailMap(prefix).entrySet()) {
       final String p = entry.getKey();
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestLeaseManager.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestLeaseManager.java
new file mode 100644
index 0000000..805f7c8
--- /dev/null
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestLeaseManager.java
@@ -0,0 +1,57 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hdfs.server.namenode;
+
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hdfs.HdfsConfiguration;
+import org.apache.hadoop.hdfs.MiniDFSCluster;
+import org.junit.Test;
+import org.mockito.Mockito;
+
+
+public class TestLeaseManager {
+  Configuration conf = new HdfsConfiguration();
+  
+  @Test
+  public void testRemoveLeaseWithPrefixPath() throws Exception {
+    MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
+    cluster.waitActive();
+
+    LeaseManager lm = NameNodeAdapter.getLeaseManager(cluster.getNamesystem());
+    lm.addLease("holder1", "/a/b");
+    lm.addLease("holder2", "/a/c");
+    assertNotNull(lm.getLeaseByPath("/a/b"));
+    assertNotNull(lm.getLeaseByPath("/a/c"));
+
+    lm.removeLeaseWithPrefixPath("/a");
+
+    assertNull(lm.getLeaseByPath("/a/b"));
+    assertNull(lm.getLeaseByPath("/a/c"));
+
+    lm.addLease("holder1", "/a/b");
+    lm.addLease("holder2", "/a/c");
+
+    lm.removeLeaseWithPrefixPath("/a/");
+
+    assertNull(lm.getLeaseByPath("/a/b"));
+    assertNull(lm.getLeaseByPath("/a/c"));
+  }
+}
-- 
1.7.0.4

