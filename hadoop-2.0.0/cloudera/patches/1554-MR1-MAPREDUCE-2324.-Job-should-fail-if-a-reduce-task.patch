From f3875462f8414374592d4dbd743f6a1d3d9b22a5 Mon Sep 17 00:00:00 2001
From: Karthik Kambatla <karthik@kambatla.com>
Date: Tue, 11 Feb 2014 14:19:54 -0800
Subject: [PATCH 1554/1612] MR1: MAPREDUCE-2324. Job should fail if a reduce task can't be scheduled anywhere

(cherry picked from commit f1ace2953b28b97b89779cd8d369c5b678d1f949)
---
 .../org/apache/hadoop/mapred/JobInProgress.java    |   10 ----------
 1 files changed, 0 insertions(+), 10 deletions(-)

diff --git a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobInProgress.java b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobInProgress.java
index 5a92909..ed97e53 100644
--- a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobInProgress.java
+++ b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobInProgress.java
@@ -2444,16 +2444,6 @@ public class JobInProgress {
       return -1;
     }
 
-    long outSize = resourceEstimator.getEstimatedReduceInputSize();
-    long availSpace = tts.getResourceStatus().getAvailableSpace();
-    if(availSpace < outSize) {
-      LOG.warn("No room for reduce task. Node " + taskTracker + " has " +
-                availSpace + 
-               " bytes free; but we expect reduce input to take " + outSize);
-
-      return -1; //see if a different TIP might work better. 
-    }
-    
     // 1. check for a never-executed reduce tip
     // reducers don't have a cache and so pass -1 to explicitly call that out
     tip = findTaskFromList(nonRunningReduces, tts, numUniqueHosts, false);
-- 
1.7.0.4

