<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<project>
  <parent>
    <artifactId>hadoop-yarn-server</artifactId>
    <groupId>org.apache.hadoop</groupId>
    <version>2.0.0-cdh4.7.1</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.hadoop</groupId>
  <artifactId>hadoop-yarn-server-common</artifactId>
  <version>2.0.0-cdh4.7.1</version>
  <name>hadoop-yarn-server-common</name>

  <properties>
    <!-- Needed for generating FindBugs warnings using parent pom -->
    <yarn.basedir>${project.parent.parent.basedir}</yarn.basedir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>create-protobuf-generated-sources-directory</id>
            <phase>initialize</phase>
            <configuration>
              <target>
                <mkdir dir="target/generated-sources/proto" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <phase>pre-site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <copy file="src/main/xsl/configuration.xsl" todir="src/site/resources"/>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>compile-proto</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo file="target/compile-proto.sh">
                    #!/bin/bash
                    PROTOC="$${protoc.path}"
                    if [ "${PROTOC}X" = "X" ]; then
                      PROTOC="protoc"
                    fi
                    PROTOC_VERSION=`${PROTOC} --version`
                    if [[ "${PROTOC_VERSION}" != *${protoc.version}* ]]; then
                      echo "Required version of 'protoc' is ${protobuf.version}, reported ${PROTOC_VERSION}"
                      exit 1
                    fi
                    PROTO_DIR=src/main/proto
                    INCLUDE_DIR=../../hadoop-yarn-api/src/main/proto/
                    JAVA_DIR=target/generated-sources/java
                    which cygpath 2&gt; /dev/null
                    if [ $? = 1 ]; then
                      IS_WIN=false
                    else
                      IS_WIN=true
                      WIN_PROTO_DIR=`cygpath --windows $PROTO_DIR`
                      WIN_JAVA_DIR=`cygpath --windows $JAVA_DIR`
                      WIN_INCLUDE_DIR=`cygpath --windows $INCLUDE_DIR`
                    fi
                    mkdir -p $JAVA_DIR 2&gt; /dev/null
                    for PROTO_FILE in `ls $PROTO_DIR/*.proto 2&gt; /dev/null`
                    do
                        if [ "$IS_WIN" = "true" ]; then
                          ${PROTOC} -I$WIN_PROTO_DIR -I$WIN_INCLUDE_DIR --java_out=$WIN_JAVA_DIR $PROTO_FILE
                        else
                          ${PROTOC} -I$PROTO_DIR -I$INCLUDE_DIR --java_out=$JAVA_DIR $PROTO_FILE
                        fi
                    done
                </echo>
                <exec executable="bash" dir="${basedir}" failonerror="true">
                  <arg line="target/compile-proto.sh"/>
                </exec>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/generated-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
