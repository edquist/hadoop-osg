#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Starts a Hadoop HTTPFS daemon
#
# chkconfig: 345 90 10
# description: Hadoop HTTPFS daemon
#
### BEGIN INIT INFO
# Provides:          hadoop-httpfs
# Required-Start:    $remote_fs
# Should-Start:
# Required-Stop:     $remote_fs
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Hadoop HTTPFS daemon
### END INIT INFO

. /lib/lsb/init-functions
. /etc/default/hadoop-httpfs

# Autodetect JAVA_HOME if not defined
if [ -e /usr/libexec/bigtop-detect-javahome ]; then
  . /usr/libexec/bigtop-detect-javahome
elif [ -e /usr/lib/bigtop-utils/bigtop-detect-javahome ]; then
  . /usr/lib/bigtop-utils/bigtop-detect-javahome
fi

STATUS_RUNNING=0
STATUS_DEAD=1
STATUS_DEAD_AND_LOCK=2
STATUS_NOT_RUNNING=3

ERROR_PROGRAM_NOT_INSTALLED=5

export HTTPFS_USER=${HTTPFS_USER:-"httpfs"}
export HTTPFS_CONFIG=${HTTPFS_CONFIG:-"/etc/hadoop-httpfs/conf"}
export HTTPFS_LOG=${HTTPFS_LOG:-"/var/log/hadoop-httpfs/"}
export HTTPFS_TEMP=${HTTPFS_TEMP:-"/var/run/hadoop-httpfs/"}
export HTTPFS_SLEEP_TIME=${HTTPFS_SLEEP_TIME:-"5"}
export CATALINA_PID=${CATALINA_PID:-"/var/run/hadoop-httpfs/hadoop-httpfs.pid"}
export CATALINA_BASE=${CATALINA_BASE:-"/usr/lib/hadoop-httpfs"}
export CATALINA_TMPDIR=${CATALINA_TMPDIR:-"/var/run/hadoop-httpfs/"}

desc="Hadoop HTTPFS daemon"
EXEC_PATH="$CATALINA_BASE/sbin/httpfs.sh"
LOCKFILE="/var/lock/subsys/hadoop-httpfs"

# Support ephemeral /var/run (don't bail -- just silently try our best) 
install -d -m 0775 -o $HTTPFS_USER -g $HTTPFS_USER "$(dirname "$CATALINA_PID")" 2>/dev/null || :

start() {
  [ -x "$EXEC_PATH" ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  log_success_msg "Starting ${desc}: "
  /bin/su -s /bin/bash -c "${EXEC_PATH} start $DAEMON_FLAGS" $HTTPFS_USER
  RETVAL=$?
  [ $RETVAL -eq 0 ] && touch $LOCKFILE
  return $RETVAL
}

stop() {
  if [ ! -e $CATALINA_PID ]; then
    log_failure_msg "$desc is not running"
    RETVAL=$STATUS_NOT_RUNNING
    return $RETVAL
  fi

  log_success_msg "Stopping ${desc}: "

  su -s /bin/bash $HTTPFS_USER -c "${EXEC_PATH} stop $HTTPFS_SLEEP_TIME -force"
  RETVAL=$?
  [ $RETVAL -eq 0 ] && rm -f $LOCKFILE 2>/dev/null
  return $RETVAL
}

restart() {
  stop
  start
}

checkstatus(){
  pidofproc -p $CATALINA_PID java > /dev/null
  status=$?

  case "$status" in
    $STATUS_RUNNING)
      log_success_msg "$desc is running"
      ;;
    $STATUS_DEAD)
      log_failure_msg "$desc is dead and pid file exists"
      ;;
    $STATUS_DEAD_AND_LOCK)
      log_failure_msg "$desc is dead and lock file exists"
      ;;
    $STATUS_NOT_RUNNING)
      log_failure_msg "$desc is not running"
      ;;
    *)
      log_failure_msg "$desc status is unknown"
      ;;
  esac
  return $status
}

condrestart(){
  [ -e $LOCKFILE ] && restart || :
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    checkstatus
    ;;
  restart)
    restart
    ;;
  condrestart|try-restart)
    condrestart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart}"
    exit 1
esac

exit $RETVAL
